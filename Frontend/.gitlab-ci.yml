stages:
  - initialize
  - package

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - ~/.npm
    - node_modules/  # Ajout pour accÃ©lÃ©rer les installations

.rules_template_tags: &only_tags
  rules:
    - if: '$CI_COMMIT_TAG'

setup:
  stage: initialize
  image: node:20
  script:
    - echo "ðŸ”„ Initialisation du projet..."
    - node -v
    - npm -v
    - npm ci --prefer-offline --no-audit --cache ~/.npm  # AmÃ©lioration du cache
  cache:
    paths:
      - ~/.npm
      - node_modules/
  <<: *only_tags

dockerize:
  stage: package
  image: docker:26.0.1
  services:
    - name: docker:26.0.1-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - echo "ðŸ”§ Configuration du deployment..."
    - sed -i "s/__APP_VERSION__/$CI_COMMIT_TAG/g" k8s/deployment/Chart.yaml
  script:
    - echo "ðŸ“¦ Packaging de l'application..."
    - docker pull "$CI_REGISTRY_IMAGE:latest" || true
    - docker build --cache-from "$CI_REGISTRY_IMAGE:latest" -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" -f docker/Dockerfile .
    - docker tag "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG" "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_TAG"
    - docker push "$CI_REGISTRY_IMAGE:latest"
  <<: *only_tags
