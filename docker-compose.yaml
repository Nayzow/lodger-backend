version: '3.8'

services:
  database:
    image: postgres:17.4
    restart: always
    networks:
      - lodger-network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: test
      POSTGRES_DB: lodger
    volumes:
      - db-data:/var/lib/postgresql/data

#  api:
#    build:
#      context: ./docker/api
#      dockerfile: Dockerfile
#    restart: always
#    depends_on:
#      - database
#    networks:
#      - lodger-network
#    ports:
#      - "8080:8080"


  jenkins:
    build:
      context: ./docker/jenkins
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8081:8080"  # Jenkins UI accessible sur 8081 côté host
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - lodger-network
    depends_on:
      - sonarqube

  sonarqube:
    image: sonarqube:lts
    restart: always
    ports:
      - "9000:9000"  # Port sonar
    networks:
      - lodger-network
    environment:
      SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: "true"
      SONARQUBE_JDBC_USERNAME: root
      SONARQUBE_JDBC_PASSWORD: test
      SONARQUBE_JDBC_URL: jdbc:postgresql://database:5432/lodger
      sonar.core.serverBaseURL: "http://localhost:9000"
    volumes:
      - sonar_data:/opt/sonarqube/data
      - sonar_extensions:/opt/sonarqube/extensions

  storage:
    image: minio/minio
    container_name: minio
    command: server /data --console-address ":9001"
    depends_on:
      - database
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    ports:
      - "9002:9000"
      - "9001:9001"
    volumes:
      - lodger-storage:/data
    networks:
      - lodger-network

volumes:
  lodger-storage:
  db-data:
  jenkins_home:
  sonar_data:
  sonar_extensions:

networks:
  lodger-network:
    driver: bridge
